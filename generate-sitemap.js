// generate-sitemap.js
const { SitemapStream, streamToPromise } = require('sitemap');
const { createWriteStream } = require('fs');
const { resolve } = require('path');
const globby = require('globby');

(async () => {
  const baseUrl = 'https://www.taproscapes.com/'; // Replace with your website URL

  // Get all static files generated by Next.js
  const pages = await globby([
    'pages/**/*.js',
    'pages/**/*.tsx',
    '!pages/_*.js',
    '!pages/_*.tsx',
    '!pages/api'
  ]);

  const smStream = new SitemapStream({ hostname: baseUrl });
  const writeStream = createWriteStream(resolve(__dirname, 'public', 'sitemap.xml'));

  smStream.pipe(writeStream);

  pages.forEach(page => {
    const path = page
      .replace('pages', '')
      .replace('.js', '')
      .replace('.tsx', '')
      .replace('/index', '');
    const route = path === '/index' ? '/' : path;
    smStream.write({ url: route, changefreq: 'daily', priority: 0.7 });
  });

  smStream.end();

  streamToPromise(smStream).then(sm => sm.toString());
})();
